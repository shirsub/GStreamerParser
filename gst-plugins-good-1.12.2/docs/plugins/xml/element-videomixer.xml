<?xml version="1.0" ?><!DOCTYPE refentry  PUBLIC '-//OASIS//DTD DocBook XML V4.1.2//EN'  'http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
]><refentry id="gst-plugins-good-plugins-videomixer">
<refmeta>
<refentrytitle id="gst-plugins-good-plugins-videomixer.top_of_page" role="top_of_page">videomixer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GST-PLUGINS-GOOD-PLUGINS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>videomixer</refname>
<refpurpose/>
</refnamediv>

<refsect1 id="gst-plugins-good-plugins-videomixer.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="GstVideoMixer2Background"><type>GstVideoMixer2Background</type></link></entry><entry role="property_name"><link linkend="GstVideoMixer2--background">background</link></entry><entry role="property_flags">Read / Write</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<anchor id="GstVideoMixer2"/><refsect1 id="gst-plugins-good-plugins-videomixer.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable frame="none" pgwide="1" role="enum_members_table">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstVideoMixer2-struct">GstVideoMixer2</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GstVideoMixer2Background">GstVideoMixer2Background</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gst-plugins-good-plugins-videomixer.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">╰──</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">╰──</phrase> <link linkend="GstObject">GstObject</link>
            <phrase role="lineart">╰──</phrase> <link linkend="GstElement">GstElement</link>
                <phrase role="lineart">╰──</phrase> GstVideoMixer2
</screen>
</refsect1>
<refsect1 id="gst-plugins-good-plugins-videomixer.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GstVideoMixer2 implements
 <link linkend="GstChildProxy">GstChildProxy</link>.</para>

</refsect1>


<refsect1 id="gst-plugins-good-plugins-videomixer.description" role="desc">
<title role="desc.title">Description</title>
<para>Videomixer can accept AYUV, ARGB and BGRA video streams. For each of the requested
sink pads it will compare the incoming geometry and framerate to define the
output parameters. Indeed output video frames will have the geometry of the
biggest incoming video stream and the framerate of the fastest incoming one.</para>
<para>Videomixer will do colorspace conversion.</para>
<para>Individual parameters for each input stream can be configured on the
<link linkend="GstVideoMixer2Pad"><type>GstVideoMixer2Pad</type></link>.</para>
<refsect2>
<title>Sample pipelines</title>
<informalexample><programlisting><![CDATA[
gst-launch-1.0 \
  videotestsrc pattern=1 ! \
  video/x-raw,format=AYUV,framerate=\(fraction\)10/1,width=100,height=100 ! \
  videobox border-alpha=0 top=-70 bottom=-70 right=-220 ! \
  videomixer name=mix sink_0::alpha=0.7 sink_1::alpha=0.5 ! \
  videoconvert ! xvimagesink \
  videotestsrc ! \
  video/x-raw,format=AYUV,framerate=\(fraction\)5/1,width=320,height=240 ! mix.
]]></programlisting></informalexample> A pipeline to demonstrate videomixer used together with videobox.
This should show a 320x240 pixels video test source with some transparency
showing the background checker pattern. Another video test source with just
the snow pattern of 100x100 pixels is overlaid on top of the first one on
the left vertically centered with a small transparency showing the first
video test source behind and the checker pattern under it. Note that the
framerate of the output video is 10 frames per second.
<informalexample><programlisting><![CDATA[
gst-launch-1.0 videotestsrc pattern=1 ! \
  video/x-raw, framerate=\(fraction\)10/1, width=100, height=100 ! \
  videomixer name=mix ! videoconvert ! ximagesink \
  videotestsrc !  \
  video/x-raw, framerate=\(fraction\)5/1, width=320, height=240 ! mix.
]]></programlisting></informalexample> A pipeline to demostrate bgra mixing. (This does not demonstrate alpha blending). 
<informalexample><programlisting><![CDATA[
gst-launch-1.0 videotestsrc pattern=1 ! \
  video/x-raw,format =I420, framerate=\(fraction\)10/1, width=100, height=100 ! \
  videomixer name=mix ! videoconvert ! ximagesink \
  videotestsrc ! \
  video/x-raw,format=I420, framerate=\(fraction\)5/1, width=320, height=240 ! mix.
]]></programlisting></informalexample> A pipeline to test I420
<informalexample><programlisting><![CDATA[
gst-launch-1.0 videomixer name=mixer sink_1::alpha=0.5 sink_1::xpos=50 sink_1::ypos=50 ! \
  videoconvert ! ximagesink \
  videotestsrc pattern=snow timestamp-offset=3000000000 ! \
  "video/x-raw,format=AYUV,width=640,height=480,framerate=(fraction)30/1" ! \
  timeoverlay ! queue2 ! mixer. \
  videotestsrc pattern=smpte ! \
  "video/x-raw,format=AYUV,width=800,height=600,framerate=(fraction)10/1" ! \
  timeoverlay ! queue2 ! mixer.
]]></programlisting></informalexample> A pipeline to demonstrate synchronized mixing (the second stream starts after 3 seconds)
</refsect2>

<include href="element-videomixer-details.xml" xmlns="http://www.w3.org/2003/XInclude"><fallback xmlns="http://www.w3.org/2003/XInclude"/></include></refsect1>
<refsect1 id="gst-plugins-good-plugins-videomixer.functions_details" role="details">
<title role="details.title">Functions</title>
<para/>
</refsect1>
<refsect1 id="gst-plugins-good-plugins-videomixer.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstVideoMixer2-struct" role="struct">
<title>struct GstVideoMixer2</title>
<indexterm zone="GstVideoMixer2-struct"><primary>GstVideoMixer2</primary></indexterm>
<programlisting language="C">struct GstVideoMixer2;</programlisting>
<para>The opaque <link linkend="GstVideoMixer2"><type>GstVideoMixer2</type></link> structure.</para>
</refsect2>
<refsect2 id="GstVideoMixer2Background" role="enum">
<title>enum GstVideoMixer2Background</title>
<indexterm zone="GstVideoMixer2Background"><primary>GstVideoMixer2Background</primary></indexterm>
<para>The different backgrounds videomixer can blend over.</para>
<refsect3 id="GstVideoMixer2Background.members" role="enum_members">
<title>Members</title>
<informaltable frame="none" pgwide="1" role="enum_members_table">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="VIDEO-MIXER2-BACKGROUND-CHECKER:CAPS">VIDEO_MIXER2_BACKGROUND_CHECKER</para></entry>
<entry role="enum_member_description"><para>checker pattern background</para>
</entry>
<entry role="enum_member_annotations"/>
</row>
<row role="constant"><entry role="enum_member_name"><para id="VIDEO-MIXER2-BACKGROUND-BLACK:CAPS">VIDEO_MIXER2_BACKGROUND_BLACK</para></entry>
<entry role="enum_member_description"><para>solid color black background</para>
</entry>
<entry role="enum_member_annotations"/>
</row>
<row role="constant"><entry role="enum_member_name"><para id="VIDEO-MIXER2-BACKGROUND-WHITE:CAPS">VIDEO_MIXER2_BACKGROUND_WHITE</para></entry>
<entry role="enum_member_description"><para>solid color white background</para>
</entry>
<entry role="enum_member_annotations"/>
</row>
<row role="constant"><entry role="enum_member_name"><para id="VIDEO-MIXER2-BACKGROUND-TRANSPARENT:CAPS">VIDEO_MIXER2_BACKGROUND_TRANSPARENT</para></entry>
<entry role="enum_member_description"><para>background is left transparent and layers are composited using &quot;A OVER B&quot; composition rules. This is only applicable to AYUV and ARGB (and variants) as it preserves the alpha channel and allows for further mixing.</para>
</entry>
<entry role="enum_member_annotations"/>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="gst-plugins-good-plugins-videomixer.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GstVideoMixer2--background" role="property"><title>The <literal>“background”</literal> property</title>
<indexterm zone="GstVideoMixer2--background"><primary>GstVideoMixer2:background</primary></indexterm>
<programlisting>  “background”               <link linkend="GstVideoMixer2Background"><type>GstVideoMixer2Background</type></link></programlisting>
<para>Background type.</para><para>Flags: Read / Write</para>
<para>Default value: Checker pattern</para>
</refsect2>

</refsect1>

</refentry>