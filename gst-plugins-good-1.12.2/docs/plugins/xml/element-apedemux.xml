<?xml version="1.0" ?><!DOCTYPE refentry  PUBLIC '-//OASIS//DTD DocBook XML V4.1.2//EN'  'http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
]><refentry id="gst-plugins-good-plugins-apedemux">
<refmeta>
<refentrytitle id="gst-plugins-good-plugins-apedemux.top_of_page" role="top_of_page">apedemux</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GST-PLUGINS-GOOD-PLUGINS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>apedemux</refname>
<refpurpose/>
</refnamediv>

<anchor id="GstApeDemux"/><refsect1 id="gst-plugins-good-plugins-apedemux.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable frame="none" pgwide="1" role="enum_members_table">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstApeDemux-struct">GstApeDemux</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gst-plugins-good-plugins-apedemux.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">╰──</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">╰──</phrase> <link linkend="GstObject">GstObject</link>
            <phrase role="lineart">╰──</phrase> <link linkend="GstElement">GstElement</link>
                <phrase role="lineart">╰──</phrase> <link linkend="GstTagDemux">GstTagDemux</link>
                    <phrase role="lineart">╰──</phrase> GstApeDemux
</screen>
</refsect1>


<refsect1 id="gst-plugins-good-plugins-apedemux.description" role="desc">
<title role="desc.title">Description</title>
<para>apedemux accepts data streams with APE tags at the start or at the end
(or both). The mime type of the data between the tag blocks is detected
using typefind functions, and the appropriate output mime type set on
outgoing buffers.</para>
<para>The element is only able to read APE tags at the end of a stream from
a seekable stream, ie. when get_range mode is supported by the upstream
elements. If get_range operation is available, apedemux makes it available
downstream. This means that elements which require get_range mode, such as
wavparse or musepackdec, can operate on files containing APE tag
information.</para>
<refsect2>
<title>Example launch line</title>
<informalexample><programlisting><![CDATA[
gst-launch-1.0 -t filesrc location=file.mpc ! apedemux ! fakesink
]]></programlisting></informalexample> This pipeline should read any available APE tag information and output it.
The contents of the file inside the APE tag regions should be detected, and
the appropriate mime type set on buffers produced from apedemux.
</refsect2>

<include href="element-apedemux-details.xml" xmlns="http://www.w3.org/2003/XInclude"><fallback xmlns="http://www.w3.org/2003/XInclude"/></include></refsect1>
<refsect1 id="gst-plugins-good-plugins-apedemux.functions_details" role="details">
<title role="details.title">Functions</title>
<para/>
</refsect1>
<refsect1 id="gst-plugins-good-plugins-apedemux.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstApeDemux-struct" role="struct">
<title>struct GstApeDemux</title>
<indexterm zone="GstApeDemux-struct"><primary>GstApeDemux</primary></indexterm>
<programlisting language="C">struct GstApeDemux;</programlisting>
</refsect2>

</refsect1>

</refentry>