<?xml version="1.0" ?><!DOCTYPE refentry  PUBLIC '-//OASIS//DTD DocBook XML V4.1.2//EN'  'http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
]><refentry id="gst-plugins-good-plugins-icydemux">
<refmeta>
<refentrytitle id="gst-plugins-good-plugins-icydemux.top_of_page" role="top_of_page">icydemux</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GST-PLUGINS-GOOD-PLUGINS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>icydemux</refname>
<refpurpose/>
</refnamediv>

<anchor id="GstICYDemux"/><refsect1 id="gst-plugins-good-plugins-icydemux.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable frame="none" pgwide="1" role="enum_members_table">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstICYDemux-struct">GstICYDemux</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gst-plugins-good-plugins-icydemux.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">╰──</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">╰──</phrase> <link linkend="GstObject">GstObject</link>
            <phrase role="lineart">╰──</phrase> <link linkend="GstElement">GstElement</link>
                <phrase role="lineart">╰──</phrase> GstICYDemux
</screen>
</refsect1>


<refsect1 id="gst-plugins-good-plugins-icydemux.description" role="desc">
<title role="desc.title">Description</title>
<para>icydemux accepts data streams with ICY metadata at known intervals, as
transmitted from an upstream element (usually read as response headers from
an HTTP stream). The mime type of the data between the tag blocks is
detected using typefind functions, and the appropriate output mime type set
on outgoing buffers. </para>
<refsect2>
<title>Example launch line</title>
<informalexample><programlisting><![CDATA[
gst-launch-1.0 souphttpsrc location=http://some.server/ iradio-mode=true ! icydemux ! fakesink -t
]]></programlisting></informalexample> This pipeline should read any available ICY tag information and output it.
The contents of the stream should be detected, and the appropriate mime
type set on buffers produced from icydemux. (Using gnomevfssrc, neonhttpsrc
or giosrc instead of souphttpsrc should also work.)
</refsect2>

<include href="element-icydemux-details.xml" xmlns="http://www.w3.org/2003/XInclude"><fallback xmlns="http://www.w3.org/2003/XInclude"/></include></refsect1>
<refsect1 id="gst-plugins-good-plugins-icydemux.functions_details" role="details">
<title role="details.title">Functions</title>
<para/>
</refsect1>
<refsect1 id="gst-plugins-good-plugins-icydemux.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstICYDemux-struct" role="struct">
<title>struct GstICYDemux</title>
<indexterm zone="GstICYDemux-struct"><primary>GstICYDemux</primary></indexterm>
<programlisting language="C">struct GstICYDemux;</programlisting>
</refsect2>

</refsect1>

</refentry>