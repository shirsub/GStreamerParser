<?xml version="1.0" ?><!DOCTYPE refentry  PUBLIC '-//OASIS//DTD DocBook XML V4.1.2//EN'  'http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY % version-entities SYSTEM "version.entities">
%version-entities;
]><refentry id="gst-plugins-good-plugins-directsoundsink">
<refmeta>
<refentrytitle id="gst-plugins-good-plugins-directsoundsink.top_of_page" role="top_of_page">directsoundsink</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GST-PLUGINS-GOOD-PLUGINS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>directsoundsink</refname>
<refpurpose/>
</refnamediv>

<refsect1 id="gst-plugins-good-plugins-directsoundsink.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable frame="none" pgwide="1" role="enum_members_table">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GstDirectSoundSink">GstDirectSoundSink</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="gst-plugins-good-plugins-directsoundsink.description" role="desc">
<title role="desc.title">Description</title>
<para>This element lets you output sound using the DirectSound API.</para>
<para>Note that you should almost always use generic audio conversion elements
like audioconvert and audioresample in front of an audiosink to make sure
your pipeline works under all circumstances (those conversion elements will
act in passthrough-mode if no conversion is necessary).</para>
<refsect2>
<title>Example pipelines</title>
<informalexample><programlisting><![CDATA[
gst-launch-1.0 -v audiotestsrc ! audioconvert ! volume volume=0.1 ! directsoundsink
]]></programlisting></informalexample> will output a sine wave (continuous beep sound) to your sound card (with
a very low volume as precaution).
<informalexample><programlisting><![CDATA[
gst-launch-1.0 -v filesrc location=music.ogg ! decodebin ! audioconvert ! audioresample ! directsoundsink
]]></programlisting></informalexample> will play an Ogg/Vorbis audio file and output it.
</refsect2>

<include href="element-directsoundsink-details.xml" xmlns="http://www.w3.org/2003/XInclude"><fallback xmlns="http://www.w3.org/2003/XInclude"/></include></refsect1>
<refsect1 id="gst-plugins-good-plugins-directsoundsink.functions_details" role="details">
<title role="details.title">Functions</title>
<para/>
</refsect1>
<refsect1 id="gst-plugins-good-plugins-directsoundsink.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GstDirectSoundSink" role="struct">
<title>struct GstDirectSoundSink</title>
<indexterm zone="GstDirectSoundSink"><primary>GstDirectSoundSink</primary></indexterm>
<programlisting language="C">struct GstDirectSoundSink {
  GstAudioSink sink;


  /* directsound object interface pointer */
  LPDIRECTSOUND pDS;

  /* directsound sound object interface pointer */
  LPDIRECTSOUNDBUFFER pDSBSecondary;

  /* directSound buffer size */
  guint buffer_size;

  /* offset of the circular buffer where we must write next */
  guint current_circular_offset;

  guint bytes_per_sample;

  /* current volume setup by mixer interface */
  glong volume;
  gboolean mute;
  
  /* current directsound device ID */
  gchar * device_id;

  GstCaps *cached_caps;
  /* lock used to protect writes and resets */
  GMutex dsound_lock;

  GstClock *system_clock;
  GstClockID write_wait_clock_id;
  gboolean reset_while_sleeping;

  gboolean first_buffer_after_reset;

  GstAudioRingBufferFormatType type;
};
</programlisting>
</refsect2>

</refsect1>

</refentry>